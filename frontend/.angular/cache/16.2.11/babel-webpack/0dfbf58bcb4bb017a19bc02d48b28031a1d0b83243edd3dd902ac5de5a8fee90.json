{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../task.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction DashboardComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"a\", 13);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.name);\n  }\n}\nclass DashboardComponent {\n  constructor(taskService, route, router) {\n    this.taskService = taskService;\n    this.route = route;\n    this.router = router;\n    this.lists = [];\n    this.tasks = [];\n    this.listId = \"\";\n    this.dashboardItems = [{\n      icon: \"fa-regular fa-sun\",\n      name: \"Daily\"\n    }, {\n      icon: \"fa-solid fa-house\",\n      name: \"Tasks\"\n    }, {\n      icon: \"fa-regular fa-star\",\n      name: \"Important\"\n    }, {\n      icon: \"fa- regular fa - file - lines\",\n      name: \"Planned\"\n    }];\n  }\n  ngOnInit() {\n    this.taskService.getLists().subscribe(lists => this.lists = lists);\n    this.route.params.subscribe(params => {\n      this.listId = params['listId'];\n      if (!this.listId) return;\n      this.taskService.getTasks(this.listId).subscribe(tasks => this.tasks = tasks);\n    });\n  }\n  onTaskClick(task) {\n    this.taskService.setCompleted(this.listId, task).subscribe(() => task.completed = !task.completed);\n  }\n  static #_ = this.ɵfac = function DashboardComponent_Factory(t) {\n    return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.TaskService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardComponent,\n    selectors: [[\"app-dashboard\"]],\n    decls: 22,\n    vars: 1,\n    consts: [[\"lang\", \"en\"], [\"href\", \"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\", \"rel\", \"stylesheet\", \"integrity\", \"sha384-9ndCyUaIbzAi2FUVXJi0CjmCapSmO7SnpJef0486qhLnuZ2cdeRhO02iuK6FUUVM\", \"crossorigin\", \"anonymous\"], [\"rel\", \"stylesheet\", \"href\", \"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css\", \"integrity\", \"sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA==\", \"crossorigin\", \"anonymous\", \"referrerpolicy\", \"no-referrer\"], [1, \"container-fluid\"], [1, \"row\"], [1, \"col-4\", \"gx-4\", \"rounded-4\"], [1, \"fa-solid\", \"fa-clipboard-check\"], [1, \"input-group\", \"mb-3\"], [\"type\", \"text\", \"placeholder\", \"Search\", 1, \"form-control\"], [\"id\", \"search\", 1, \"input-group-text\"], [1, \"fa-solid\"], [4, \"ngFor\", \"ngForOf\"], [1, \"col-8\", \"gx-4\", \"rounded-4\"], [\"href\", \"\", 1, \"btn\"]],\n    template: function DashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"html\", 0)(1, \"head\")(2, \"title\");\n        i0.ɵɵtext(3, \"Dashboard\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"link\", 1)(5, \"link\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"body\")(7, \"div\", 3)(8, \"div\", 4)(9, \"div\", 5)(10, \"h2\");\n        i0.ɵɵelement(11, \"i\", 6);\n        i0.ɵɵtext(12, \" To-Do List\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 7);\n        i0.ɵɵelement(14, \"input\", 8);\n        i0.ɵɵelementStart(15, \"span\", 9);\n        i0.ɵɵelement(16, \"i\", 10);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementContainerStart(17);\n        i0.ɵɵtemplate(18, DashboardComponent_div_18_Template, 3, 1, \"div\", 11);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 12)(20, \"p\");\n        i0.ɵɵtext(21, \"Everyone\");\n        i0.ɵɵelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(18);\n        i0.ɵɵproperty(\"ngForOf\", ctx.dashboardItems);\n      }\n    },\n    dependencies: [i3.NgForOf],\n    styles: [\".col-4[_ngcontent-%COMP%]{\\n  height: 100%;\\n  border: 1px solid gray;\\n}\\n.col-8[_ngcontent-%COMP%]{\\n  height: 100%;\\n  border: 1px solid gray;\\n\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBWTtFQUNaLHNCQUFzQjtBQUN4QjtBQUNBO0VBQ0UsWUFBWTtFQUNaLHNCQUFzQjs7QUFFeEIiLCJzb3VyY2VzQ29udGVudCI6WyIuY29sLTR7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkIGdyYXk7XHJcbn1cclxuLmNvbC04e1xyXG4gIGhlaWdodDogMTAwJTtcclxuICBib3JkZXI6IDFweCBzb2xpZCBncmF5O1xyXG5cclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}\nexport { DashboardComponent };","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","item_r1","name","DashboardComponent","constructor","taskService","route","router","lists","tasks","listId","dashboardItems","icon","ngOnInit","getLists","subscribe","params","getTasks","onTaskClick","task","setCompleted","completed","_","ɵɵdirectiveInject","i1","TaskService","i2","ActivatedRoute","Router","_2","selectors","decls","vars","consts","template","DashboardComponent_Template","rf","ctx","ɵɵelement","ɵɵelementContainerStart","ɵɵtemplate","DashboardComponent_div_18_Template","ɵɵelementContainerEnd","ɵɵproperty"],"sources":["D:\\Programming\\Full_Stack\\Angular\\To-Do-App\\frontend\\src\\app\\dashboard\\dashboard.component.ts","D:\\Programming\\Full_Stack\\Angular\\To-Do-App\\frontend\\src\\app\\dashboard\\dashboard.component.html"],"sourcesContent":["import { Component,OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { TaskService } from '../task.service';\nimport List from '../models/list';\nimport Task from '../models/task';\nimport { items } from './dashboard';\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit{\n  lists: List[] = [];\n  tasks: Task[] = [];\n  listId: string = \"\";\n\n  dashboardItems: items[] = [\n    {\n      icon: \"fa-regular fa-sun\",\n      name: \"Daily\",\n    },\n    {\n      icon: \"fa-solid fa-house\",\n      name: \"Tasks\"\n    },\n    {\n      icon: \"fa-regular fa-star\",\n      name: \"Important\",\n    },\n    {\n      icon: \"fa- regular fa - file - lines\",\n      name: \"Planned\",\n    }\n  ]\n\n  constructor(\n    private taskService: TaskService,\n    private route: ActivatedRoute,\n    private router: Router) { };\n\n  ngOnInit(): void {\n    this.taskService.getLists()\n      .subscribe((lists: any) => this.lists = lists);\n\n    this.route.params.subscribe((params: Params) => {\n      this.listId = params['listId'];\n      if (!this.listId) return;\n      this.taskService.getTasks(this.listId).subscribe((tasks: any) => this.tasks = tasks);\n    })\n  }\n\n  onTaskClick(task: any) {\n    this.taskService.setCompleted(this.listId, task).subscribe(\n      () => task.completed = !task.completed\n    );\n  }\n}\n","<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n  <title>Dashboard</title>\n  <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\"\n    integrity=\"sha384-9ndCyUaIbzAi2FUVXJi0CjmCapSmO7SnpJef0486qhLnuZ2cdeRhO02iuK6FUUVM\" crossorigin=\"anonymous\">\n  <script defer src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js\"\n    integrity=\"sha384-geWF76RCwLtnZ8qwWowPQNguL3RmwHVBC9FhGdlKrxdiJJigb/j/68SIy3Te4Bkz\" crossorigin=\"anonymous\"></script>\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css\"\n      integrity=\"sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA==\"\n      crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\" />\n</head>\n\n<body>\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-4 gx-4 rounded-4\">\n        <h2><i class=\"fa-solid fa-clipboard-check\"></i> To-Do List</h2>\n\n        <div class=\"input-group mb-3\">\n          <input type=\"text\" class=\"form-control\" placeholder=\"Search\">\n          <span class=\"input-group-text\" id=\"search\"><i class=\"fa-solid \"></i></span>\n        </div>\n\n        <ng-container>\n            <div *ngFor=\"let item of dashboardItems\">\n              <a href=\"\" class=\"btn \">{{item.name}}</a>\n            </div>\n        </ng-container>\n      </div>\n      <div class=\"col-8 gx-4 rounded-4\">\n        <p>Everyone</p>\n      </div>\n    </div>\n  </div>\n\n  <!-- <div class=\"container-fluid\">\n    <ng-container *ngFor=\"let list of lists\">\n      <button class=\"btn btn-primary m-3\" type=\"button\" [routerLink]=\"['/dashboard/lists',list._id]\">\n        {{list.title}}\n      </button>\n    </ng-container>\n  </div> -->\n\n  <!-- <div class=\"container-fluid\">\n    <h3 *ngIf=\"tasks.length>0\">Tasks</h3>\n    <button *ngFor=\"let task of tasks\" class=\"btn btn-secondary d-block m-3\" (click)=\"onTaskClick(task)\"\n      [style.color]=\"task.completed ? 'red' :'white'\">\n      {{task.title}}\n    </button>\n  </div> -->\n</body>\n\n</html>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}