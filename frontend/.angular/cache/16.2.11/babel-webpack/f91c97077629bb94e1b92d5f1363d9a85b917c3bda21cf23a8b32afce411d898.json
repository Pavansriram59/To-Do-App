{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../task.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction DashboardComponent_h3_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h3\");\n    i0.ɵɵtext(1, \"Tasks\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardComponent_button_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_button_18_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const task_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.onTaskClick(task_r2));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const task_r2 = ctx.$implicit;\n    i0.ɵɵstyleProp(\"color\", task_r2.completed ? \"red\" : \"white\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", task_r2.title, \" \");\n  }\n}\nclass DashboardComponent {\n  constructor(taskService, route, router) {\n    this.taskService = taskService;\n    this.route = route;\n    this.router = router;\n    this.lists = [];\n    this.tasks = [];\n    this.listId = \"\";\n  }\n  ngOnInit() {\n    this.taskService.getLists().subscribe(lists => this.lists = lists);\n    this.route.params.subscribe(params => {\n      this.listId = params['listId'];\n      if (!this.listId) return;\n      this.taskService.getTasks(this.listId).subscribe(tasks => this.tasks = tasks);\n    });\n  }\n  onTaskClick(task) {\n    this.taskService.setCompleted(this.listId, task).subscribe(() => task.completed = !task.completed);\n  }\n  static #_ = this.ɵfac = function DashboardComponent_Factory(t) {\n    return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.TaskService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardComponent,\n    selectors: [[\"app-dashboard\"]],\n    decls: 19,\n    vars: 2,\n    consts: [[\"lang\", \"en\"], [\"href\", \"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\", \"rel\", \"stylesheet\", \"integrity\", \"sha384-9ndCyUaIbzAi2FUVXJi0CjmCapSmO7SnpJef0486qhLnuZ2cdeRhO02iuK6FUUVM\", \"crossorigin\", \"anonymous\"], [1, \"text-center\"], [1, \"container-fluid\"], [1, \"row\"], [1, \"col-4\"], [1, \"col-8\"], [4, \"ngIf\"], [\"class\", \"btn btn-secondary d-block m-3\", 3, \"color\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-secondary\", \"d-block\", \"m-3\", 3, \"click\"]],\n    template: function DashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"html\", 0)(1, \"head\")(2, \"title\");\n        i0.ɵɵtext(3, \"Dashboard\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"link\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"body\")(6, \"h1\", 2);\n        i0.ɵɵtext(7, \"My To-Do List\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 3)(9, \"div\", 4)(10, \"div\", 5)(11, \"p\");\n        i0.ɵɵtext(12, \"Hello\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"div\", 6)(14, \"p\");\n        i0.ɵɵtext(15, \"Everyone\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(16, \"div\", 3);\n        i0.ɵɵtemplate(17, DashboardComponent_h3_17_Template, 2, 0, \"h3\", 7);\n        i0.ɵɵtemplate(18, DashboardComponent_button_18_Template, 2, 3, \"button\", 8);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(17);\n        i0.ɵɵproperty(\"ngIf\", ctx.tasks.length > 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.tasks);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf],\n    styles: [\".col-4[_ngcontent-%COMP%]{\\n  height: max-content;\\n  \\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsbUJBQW1COztBQUVyQiIsInNvdXJjZXNDb250ZW50IjpbIi5jb2wtNHtcclxuICBoZWlnaHQ6IG1heC1jb250ZW50O1xyXG4gIFxyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}\nexport { DashboardComponent };","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","DashboardComponent_button_18_Template_button_click_0_listener","restoredCtx","ɵɵrestoreView","_r4","task_r2","$implicit","ctx_r3","ɵɵnextContext","ɵɵresetView","onTaskClick","ɵɵstyleProp","completed","ɵɵadvance","ɵɵtextInterpolate1","title","DashboardComponent","constructor","taskService","route","router","lists","tasks","listId","ngOnInit","getLists","subscribe","params","getTasks","task","setCompleted","_","ɵɵdirectiveInject","i1","TaskService","i2","ActivatedRoute","Router","_2","selectors","decls","vars","consts","template","DashboardComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","DashboardComponent_h3_17_Template","DashboardComponent_button_18_Template","ɵɵproperty","length"],"sources":["D:\\Programming\\Full_Stack\\Angular\\To-Do-App\\frontend\\src\\app\\dashboard\\dashboard.component.ts","D:\\Programming\\Full_Stack\\Angular\\To-Do-App\\frontend\\src\\app\\dashboard\\dashboard.component.html"],"sourcesContent":["import { Component,OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { TaskService } from '../task.service';\nimport List from '../models/list';\nimport Task from '../models/task';\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit{\n  lists: List[] = [];\n  tasks: Task[] = [];\n  listId: string = \"\";\n\n  constructor(\n    private taskService: TaskService,\n    private route: ActivatedRoute,\n    private router: Router) { };\n\n  ngOnInit(): void {\n    this.taskService.getLists()\n      .subscribe((lists: any) => this.lists = lists);\n\n    this.route.params.subscribe((params: Params) => {\n      this.listId = params['listId'];\n      if (!this.listId) return;\n      this.taskService.getTasks(this.listId).subscribe((tasks: any) => this.tasks = tasks);\n    })\n  }\n\n  onTaskClick(task: any) {\n    this.taskService.setCompleted(this.listId, task).subscribe(\n      () => task.completed = !task.completed\n    );\n  }\n}\n","<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n  <title>Dashboard</title>\n  <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\"\n    integrity=\"sha384-9ndCyUaIbzAi2FUVXJi0CjmCapSmO7SnpJef0486qhLnuZ2cdeRhO02iuK6FUUVM\" crossorigin=\"anonymous\">\n  <script defer src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js\"\n    integrity=\"sha384-geWF76RCwLtnZ8qwWowPQNguL3RmwHVBC9FhGdlKrxdiJJigb/j/68SIy3Te4Bkz\" crossorigin=\"anonymous\"></script>\n</head>\n\n<body>\n  <h1 class=\"text-center\">My To-Do List</h1>\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-4\">\n        <p>Hello</p>\n      </div>\n      <div class=\"col-8\">\n        <p>Everyone</p>\n      </div>\n    </div>\n  </div>\n\n  <!-- <div class=\"container-fluid\">\n    <ng-container *ngFor=\"let list of lists\">\n      <button class=\"btn btn-primary m-3\" type=\"button\" [routerLink]=\"['/dashboard/lists',list._id]\">\n        {{list.title}}\n      </button>\n    </ng-container>\n  </div> -->\n\n  <div class=\"container-fluid\">\n    <h3 *ngIf=\"tasks.length>0\">Tasks</h3>\n    <button *ngFor=\"let task of tasks\" class=\"btn btn-secondary d-block m-3\" (click)=\"onTaskClick(task)\"\n      [style.color]=\"task.completed ? 'red' :'white'\">\n      {{task.title}}\n    </button>\n  </div>\n</body>\n\n</html>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}