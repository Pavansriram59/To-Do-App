{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./web-api.service\";\nclass TaskService {\n  constructor(webService) {\n    this.webService = webService;\n  }\n  getLists() {\n    return this.webService.get(\"dashboard/lists\");\n  }\n  createList(title) {\n    return this.webService.post(\"dashboard/lists\", {\n      title\n    });\n  }\n  getTasks(listId) {\n    return this.webService.get(`dashboard/lists/${listId}/tasks`);\n  }\n  createTask(listId, title) {\n    return this.webService.post(`dashboard/lists/${listId}/tasks`, {\n      title\n    });\n  }\n  deleteList(listId) {\n    return this.webService.delete(`dashboard/lists/${listId}`);\n  }\n  deleteTask(listId, taskId) {\n    return this.webService.delete(`dashboard/lists/${listId}/tasks/${taskId}`);\n  }\n  setCompleted(listId, task) {\n    return this.webService.patch(`lists/${listId}/tasks/${task._id}`, {\n      completed: !task.completed\n    });\n  }\n  static #_ = this.ɵfac = function TaskService_Factory(t) {\n    return new (t || TaskService)(i0.ɵɵinject(i1.WebApiService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TaskService,\n    factory: TaskService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { TaskService };","map":{"version":3,"names":["TaskService","constructor","webService","getLists","get","createList","title","post","getTasks","listId","createTask","deleteList","delete","deleteTask","taskId","setCompleted","task","patch","_id","completed","_","i0","ɵɵinject","i1","WebApiService","_2","factory","ɵfac","providedIn"],"sources":["D:\\Programming\\Full_Stack\\Angular\\To-Do-App\\frontend\\src\\app\\task.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { WebApiService } from './web-api.service';\nimport Task from './models/task';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n\n  constructor(private webService: WebApiService) { }\n\n  public getLists() {\n    return this.webService.get(\"dashboard/lists\");\n  }\n\n  public createList(title: string) {\n    return this.webService.post(\"dashboard/lists\", { title });\n  }\n\n  public getTasks(listId: string) {\n    return this.webService.get(`dashboard/lists/${listId}/tasks`);\n  }\n  public createTask(listId: string, title: string) {\n    return this.webService.post(`dashboard/lists/${listId}/tasks`, { title });\n  }\n\n  public deleteList(listId: string) {\n    return this.webService.delete(`dashboard/lists/${listId}`)\n  }\n\n  public deleteTask(listId: string, taskId: string) {\n    return this.webService.delete(`dashboard/lists/${listId}/tasks/${taskId}`)\n  }\n\n  public setCompleted(listId: string, task: Task) {\n    return this.webService.patch(`lists/${listId}/tasks/${task._id}`, { completed: !task.completed });\n  }\n}\n"],"mappings":";;AAIA,MAGaA,WAAW;EAEtBC,YAAoBC,UAAyB;IAAzB,KAAAA,UAAU,GAAVA,UAAU;EAAmB;EAE1CC,QAAQA,CAAA;IACb,OAAO,IAAI,CAACD,UAAU,CAACE,GAAG,CAAC,iBAAiB,CAAC;EAC/C;EAEOC,UAAUA,CAACC,KAAa;IAC7B,OAAO,IAAI,CAACJ,UAAU,CAACK,IAAI,CAAC,iBAAiB,EAAE;MAAED;IAAK,CAAE,CAAC;EAC3D;EAEOE,QAAQA,CAACC,MAAc;IAC5B,OAAO,IAAI,CAACP,UAAU,CAACE,GAAG,CAAC,mBAAmBK,MAAM,QAAQ,CAAC;EAC/D;EACOC,UAAUA,CAACD,MAAc,EAAEH,KAAa;IAC7C,OAAO,IAAI,CAACJ,UAAU,CAACK,IAAI,CAAC,mBAAmBE,MAAM,QAAQ,EAAE;MAAEH;IAAK,CAAE,CAAC;EAC3E;EAEOK,UAAUA,CAACF,MAAc;IAC9B,OAAO,IAAI,CAACP,UAAU,CAACU,MAAM,CAAC,mBAAmBH,MAAM,EAAE,CAAC;EAC5D;EAEOI,UAAUA,CAACJ,MAAc,EAAEK,MAAc;IAC9C,OAAO,IAAI,CAACZ,UAAU,CAACU,MAAM,CAAC,mBAAmBH,MAAM,UAAUK,MAAM,EAAE,CAAC;EAC5E;EAEOC,YAAYA,CAACN,MAAc,EAAEO,IAAU;IAC5C,OAAO,IAAI,CAACd,UAAU,CAACe,KAAK,CAAC,SAASR,MAAM,UAAUO,IAAI,CAACE,GAAG,EAAE,EAAE;MAAEC,SAAS,EAAE,CAACH,IAAI,CAACG;IAAS,CAAE,CAAC;EACnG;EAAC,QAAAC,CAAA,G;qBA7BUpB,WAAW,EAAAqB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,aAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXzB,WAAW;IAAA0B,OAAA,EAAX1B,WAAW,CAAA2B,IAAA;IAAAC,UAAA,EAFV;EAAM;;SAEP5B,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}