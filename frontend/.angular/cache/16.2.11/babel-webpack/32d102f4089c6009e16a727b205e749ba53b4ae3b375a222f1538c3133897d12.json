{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../task.service\";\nimport * as i2 from \"@angular/router\";\nclass DashboardComponent {\n  constructor(taskService, route, router) {\n    this.taskService = taskService;\n    this.route = route;\n    this.router = router;\n    this.lists = [];\n    this.tasks = [];\n    this.listId = \"\";\n  }\n  ngOnInit() {\n    this.taskService.getLists().subscribe(lists => this.lists = lists);\n    this.route.params.subscribe(params => {\n      this.listId = params['listId'];\n      if (!this.listId) return;\n      this.taskService.getTasks(this.listId).subscribe(tasks => this.tasks = tasks);\n    });\n  }\n  onTaskClick(task) {\n    this.taskService.setCompleted(this.listId, task).subscribe(() => task.completed = !task.completed);\n  }\n  static #_ = this.ɵfac = function DashboardComponent_Factory(t) {\n    return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.TaskService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardComponent,\n    selectors: [[\"app-dashboard\"]],\n    decls: 0,\n    vars: 0,\n    template: function DashboardComponent_Template(rf, ctx) {},\n    styles: [\".col-4[_ngcontent-%COMP%]{\\n  height: 100%;\\n  border: 1px solid gray;\\n  border-radius: ;\\n}\\n.col-8[_ngcontent-%COMP%]{\\n  height: 100%;\\n  border: 1px solid gray;\\n\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBWTtFQUNaLHNCQUFzQjtFQUN0QixlQUFlO0FBQ2pCO0FBQ0E7RUFDRSxZQUFZO0VBQ1osc0JBQXNCOztBQUV4QiIsInNvdXJjZXNDb250ZW50IjpbIi5jb2wtNHtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgZ3JheTtcclxuICBib3JkZXItcmFkaXVzOiA7XHJcbn1cclxuLmNvbC04e1xyXG4gIGhlaWdodDogMTAwJTtcclxuICBib3JkZXI6IDFweCBzb2xpZCBncmF5O1xyXG5cclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}\nexport { DashboardComponent };","map":{"version":3,"names":["DashboardComponent","constructor","taskService","route","router","lists","tasks","listId","ngOnInit","getLists","subscribe","params","getTasks","onTaskClick","task","setCompleted","completed","_","i0","ɵɵdirectiveInject","i1","TaskService","i2","ActivatedRoute","Router","_2","selectors","decls","vars","template","DashboardComponent_Template","rf","ctx","styles"],"sources":["D:\\Programming\\Full_Stack\\Angular\\To-Do-App\\frontend\\src\\app\\dashboard\\dashboard.component.ts"],"sourcesContent":["import { Component,OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { TaskService } from '../task.service';\nimport List from '../models/list';\nimport Task from '../models/task';\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit{\n  lists: List[] = [];\n  tasks: Task[] = [];\n  listId: string = \"\";\n\n  constructor(\n    private taskService: TaskService,\n    private route: ActivatedRoute,\n    private router: Router) { };\n\n  ngOnInit(): void {\n    this.taskService.getLists()\n      .subscribe((lists: any) => this.lists = lists);\n\n    this.route.params.subscribe((params: Params) => {\n      this.listId = params['listId'];\n      if (!this.listId) return;\n      this.taskService.getTasks(this.listId).subscribe((tasks: any) => this.tasks = tasks);\n    })\n  }\n\n  onTaskClick(task: any) {\n    this.taskService.setCompleted(this.listId, task).subscribe(\n      () => task.completed = !task.completed\n    );\n  }\n}\n"],"mappings":";;;AAKA,MAKaA,kBAAkB;EAK7BC,YACUC,WAAwB,EACxBC,KAAqB,EACrBC,MAAc;IAFd,KAAAF,WAAW,GAAXA,WAAW;IACX,KAAAC,KAAK,GAALA,KAAK;IACL,KAAAC,MAAM,GAANA,MAAM;IAPhB,KAAAC,KAAK,GAAW,EAAE;IAClB,KAAAC,KAAK,GAAW,EAAE;IAClB,KAAAC,MAAM,GAAW,EAAE;EAKS;EAE5BC,QAAQA,CAAA;IACN,IAAI,CAACN,WAAW,CAACO,QAAQ,EAAE,CACxBC,SAAS,CAAEL,KAAU,IAAK,IAAI,CAACA,KAAK,GAAGA,KAAK,CAAC;IAEhD,IAAI,CAACF,KAAK,CAACQ,MAAM,CAACD,SAAS,CAAEC,MAAc,IAAI;MAC7C,IAAI,CAACJ,MAAM,GAAGI,MAAM,CAAC,QAAQ,CAAC;MAC9B,IAAI,CAAC,IAAI,CAACJ,MAAM,EAAE;MAClB,IAAI,CAACL,WAAW,CAACU,QAAQ,CAAC,IAAI,CAACL,MAAM,CAAC,CAACG,SAAS,CAAEJ,KAAU,IAAK,IAAI,CAACA,KAAK,GAAGA,KAAK,CAAC;IACtF,CAAC,CAAC;EACJ;EAEAO,WAAWA,CAACC,IAAS;IACnB,IAAI,CAACZ,WAAW,CAACa,YAAY,CAAC,IAAI,CAACR,MAAM,EAAEO,IAAI,CAAC,CAACJ,SAAS,CACxD,MAAMI,IAAI,CAACE,SAAS,GAAG,CAACF,IAAI,CAACE,SAAS,CACvC;EACH;EAAC,QAAAC,CAAA,G;qBAzBUjB,kBAAkB,EAAAkB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,cAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAE,MAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAlBzB,kBAAkB;IAAA0B,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;IAAAC,MAAA;EAAA;;SAAlBjC,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}