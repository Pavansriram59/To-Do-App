{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet DashboardComponent = class DashboardComponent {\n  constructor(taskService, route, router) {\n    this.taskService = taskService;\n    this.route = route;\n    this.router = router;\n    this.lists = [];\n    this.tasks = [];\n    this.dashboardItems = [{\n      icon: \"fa-regular fa-sun\",\n      name: \"Daily\"\n    }, {\n      icon: \"fa-solid fa-house\",\n      name: \"Tasks\"\n    }, {\n      icon: \"fa-regular fa-star\",\n      name: \"Important\"\n    }];\n  }\n  ngOnInit() {\n    this.taskService.getLists().subscribe(lists => this.lists = lists);\n    this.route.params.subscribe(params => {\n      this.listId = params['listId'];\n      if (!this.listId) return;\n      this.taskService.getTasks(this.listId).subscribe(tasks => this.tasks = tasks);\n    });\n  }\n  // isSelected(selectedListId: any): boolean {\n  //   return this.listId === selectedListId;\n  // }\n  addList() {\n    this.taskService.createList(this.listName).subscribe(list => {\n      this.lists.push(list);\n    });\n  }\n  onTaskClick(task) {\n    this.taskService.setCompleted(this.listId, task).subscribe(() => task.completed = !task.completed);\n  }\n};\nDashboardComponent = __decorate([Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})], DashboardComponent);\nexport { DashboardComponent };","map":{"version":3,"names":["Component","DashboardComponent","constructor","taskService","route","router","lists","tasks","dashboardItems","icon","name","ngOnInit","getLists","subscribe","params","listId","getTasks","addList","createList","listName","list","push","onTaskClick","task","setCompleted","completed","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\Programming\\Full_Stack\\Angular\\To-Do-App\\frontend\\src\\app\\dashboard\\dashboard.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { TaskService } from '../task.service';\nimport List from '../models/list';\nimport Task from '../models/task';\nimport { items } from './dashboard';\nimport ObjectID from 'bson-objectid';\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  lists: List[] = [];\n  tasks: Task[] = [];\n  listId: any;\n  listName!: string;\n\n  dashboardItems: items[] = [\n    {\n      icon: \"fa-regular fa-sun\",\n      name: \"Daily\",\n    },\n    {\n      icon: \"fa-solid fa-house\",\n      name: \"Tasks\"\n    },\n    {\n      icon: \"fa-regular fa-star\",\n      name: \"Important\",\n    }\n  ]\n\n  constructor(\n    private taskService: TaskService,\n    private route: ActivatedRoute,\n    private router: Router) { };\n\n  ngOnInit(): void {\n    this.taskService.getLists()\n      .subscribe((lists: any) => this.lists = lists);\n    this.route.params.subscribe((params:Params) => {\n      this.listId = params['listId'];\n      if (!this.listId) return;\n      this.taskService.getTasks(this.listId).subscribe((tasks: any) => this.tasks = tasks);\n    })\n  }\n\n  // isSelected(selectedListId: any): boolean {\n  //   return this.listId === selectedListId;\n  // }\n  addList(): any {\n    this.taskService.createList(this.listName)\n      .subscribe((list: any) => {\n        this.lists.push(list);\n      })\n  }\n\n\n  onTaskClick(task: any) {\n    this.taskService.setCompleted(this.listId, task).subscribe(\n      () => task.completed = !task.completed\n    );\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAYjD,IAAaC,kBAAkB,GAA/B,MAAaA,kBAAkB;EAqB7BC,YACUC,WAAwB,EACxBC,KAAqB,EACrBC,MAAc;IAFd,KAAAF,WAAW,GAAXA,WAAW;IACX,KAAAC,KAAK,GAALA,KAAK;IACL,KAAAC,MAAM,GAANA,MAAM;IAvBhB,KAAAC,KAAK,GAAW,EAAE;IAClB,KAAAC,KAAK,GAAW,EAAE;IAIlB,KAAAC,cAAc,GAAY,CACxB;MACEC,IAAI,EAAE,mBAAmB;MACzBC,IAAI,EAAE;KACP,EACD;MACED,IAAI,EAAE,mBAAmB;MACzBC,IAAI,EAAE;KACP,EACD;MACED,IAAI,EAAE,oBAAoB;MAC1BC,IAAI,EAAE;KACP,CACF;EAK2B;EAE5BC,QAAQA,CAAA;IACN,IAAI,CAACR,WAAW,CAACS,QAAQ,EAAE,CACxBC,SAAS,CAAEP,KAAU,IAAK,IAAI,CAACA,KAAK,GAAGA,KAAK,CAAC;IAChD,IAAI,CAACF,KAAK,CAACU,MAAM,CAACD,SAAS,CAAEC,MAAa,IAAI;MAC5C,IAAI,CAACC,MAAM,GAAGD,MAAM,CAAC,QAAQ,CAAC;MAC9B,IAAI,CAAC,IAAI,CAACC,MAAM,EAAE;MAClB,IAAI,CAACZ,WAAW,CAACa,QAAQ,CAAC,IAAI,CAACD,MAAM,CAAC,CAACF,SAAS,CAAEN,KAAU,IAAK,IAAI,CAACA,KAAK,GAAGA,KAAK,CAAC;IACtF,CAAC,CAAC;EACJ;EAEA;EACA;EACA;EACAU,OAAOA,CAAA;IACL,IAAI,CAACd,WAAW,CAACe,UAAU,CAAC,IAAI,CAACC,QAAQ,CAAC,CACvCN,SAAS,CAAEO,IAAS,IAAI;MACvB,IAAI,CAACd,KAAK,CAACe,IAAI,CAACD,IAAI,CAAC;IACvB,CAAC,CAAC;EACN;EAGAE,WAAWA,CAACC,IAAS;IACnB,IAAI,CAACpB,WAAW,CAACqB,YAAY,CAAC,IAAI,CAACT,MAAM,EAAEQ,IAAI,CAAC,CAACV,SAAS,CACxD,MAAMU,IAAI,CAACE,SAAS,GAAG,CAACF,IAAI,CAACE,SAAS,CACvC;EACH;CACD;AApDYxB,kBAAkB,GAAAyB,UAAA,EAL9B1B,SAAS,CAAC;EACT2B,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,C,EACW5B,kBAAkB,CAoD9B;SApDYA,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}